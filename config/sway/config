# BenjiLeGnard's configuration for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set "$mod" Mod4
# Home row direction keys, like vim
set "$left" h
set "$down" j
set "$up" k
set "$right" l
# Your preferred terminal emulator
set "$term" foot
set "$browser" firefox
set "$ide" code

### Launchers

# copy-paste manager
exec wl-paste -t text --watch clipman store --no-persist

# launch taskbar indicators
exec nm-applet --indicator
exec blueman-applet

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
# set $menu rofi -show drun | xargs swaymsg exec --
set "$menu" fuzzel | xargs swaymsg exec --
include /etc/sway/config-vars.d/*

exec gnome-keyring-daemon --start
exec export SSH_AUTH_SOCK=/run/user/381850423/keyring/ssh

# for xdg-desktop-portal-wlr
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

# Notification Daemon
exec swaync

# Toggle control center
bindsym "$mod"+Shift+n exec swaync-client -t -sw

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#

# Random wallpaper
set "$wallpapers_path" "$HOME"/Images/SimonStalenhag
output * bg $(find "$wallpapers_path" -type f | shuf -n 1) fill

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
          timeout 300 'swaylock -f -c 000000' \
          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
          before-sleep 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# keyboard configuration
input * {
    xkb_layout "us,fr"
    xkb_variant "intl,azerty"
    xkb_options "grp:win_space_toggle"
}

# touchpad
input type:touchpad {
    tap enabled
    natural_scroll enabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Start VSCode
    bindsym $mod+c exec $ide

    # Start firefox
    bindsym $mod+i exec $browser
    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec zenity --question && swaymsg exit
    bindsym --to-code $mod+Print exec 'grimshot copy area'

    bindsym $mod+Shift+o exec 'swaylock -f -c 000000'

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Ctrl+1 move container to workspace number 1
    bindsym $mod+Ctrl+2 move container to workspace number 2
    bindsym $mod+Ctrl+3 move container to workspace number 3
    bindsym $mod+Ctrl+4 move container to workspace number 4
    bindsym $mod+Ctrl+5 move container to workspace number 5
    bindsym $mod+Ctrl+6 move container to workspace number 6
    bindsym $mod+Ctrl+7 move container to workspace number 7
    bindsym $mod+Ctrl+8 move container to workspace number 8
    bindsym $mod+Ctrl+9 move container to workspace number 9
    bindsym $mod+Ctrl+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Screenshots:
#
# Super+P: Current window
# Super+Shift+p: Select area
# Super+Alt+p Current output
# Super+Ctrl+p Select a window

bindsym Mod4+p       exec grimshot save active
bindsym Mod4+Shift+p exec grimshot copy area
bindsym Mod4+Mod1+p  exec grimshot save output
bindsym Mod4+Ctrl+p  exec grimshot save window

#
# Theming
#
include catppuccin-mocha

default_border none
default_floating_border none
hide_edge_borders both
gaps inner 10

# gaps outer 10
# catppuccin defaults 
# target                 title     bg    text   indicator  border
client.focused           $pink     $base $text  $rosewater $pink
client.focused_inactive  $mauve    $base $text  $rosewater $mauve
client.unfocused         $mauve    $base $text  $rosewater $mauve
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    swaybar_command waybar

    # colors {
    #    statusline #ffffff
    #    background $colorHeader
    #    inactive_workspace #32323200 #32323200 #5c5c5c
    #	active_workspace $colorBlueLight $colorBlueLight $colorWhite
    # }
}

include /etc/sway/config.d/*


