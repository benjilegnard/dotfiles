---
- name: Install CLI packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - htop
    - tmux
    - jq
    - git
    - zsh
    - curl
    - zip
    - fzf
    - w3m
    - w3m-img

- name: Remove old or unused cli packages from base install
  ansible.builtin.apt:
    name: "{{ item }}"
    state: absent
  loop:
    - btop
    - tig
    - texinfo

# starship

- name: Checks if starship is available
  ansible.builtin.raw: which starship
  check_mode: false
  changed_when: false
  register: starship_available
  ignore_errors: true

- name: Download starship installation script
  when: "starship_available.rc != 0"
  ansible.builtin.get_url:
    url: https://starship.rs/install.sh
    dest: /tmp/starship-installer.sh
    mode: 'u+rwx'
  register: starship_download

- name: Run the install starship script
  ansible.builtin.shell: /tmp/starship-installer.sh -y
  when: starship_download.changed

- name: Remove the starship-installer.sh
  ansible.builtin.file:
    path: /tmp/starship-installer.sh
    state: absent

- name: Add starship init to bashrc
  ansible.builtin.lineinfile:
    path: /home/{{ user }}/.bashrc
    line: 'eval "$(starship init bash)"'
    state: present
    create: true
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "644"

- name: Add starship init to zshrc
  ansible.builtin.lineinfile:
    path: /home/{{ user }}/.zshrc
    line: 'eval "$(starship init zsh)"'
    state: present
    create: true
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "644"

- name: Copy starship configuration
  ansible.builtin.copy:
    src: ./config/starship.toml
    dest: /home/{{ user }}/.config/
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "644"

# Zoxide

- name: Add zoxide init to bashrc
  ansible.builtin.lineinfile:
    path: /home/{{ user }}/.bashrc
    line: 'eval "$(zoxide init bash)"'
    state: present
    create: true
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "644"

- name: Add zoxide init to zshrc
  ansible.builtin.lineinfile:
    path: /home/{{ user }}/.zshrc
    line: 'eval "$(zoxide init zsh)"'
    state: present
    create: true
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "644"

# Install Hack font

- name: Ensure fonts directory exists
  ansible.builtin.file:
    path: /usr/local/share/fonts
    state: directory

- name: Hack exists
  ansible.builtin.shell: "ls /usr/local/share/fonts/Hack*Nerd*Font*"
  register: hack_exists
  ignore_errors: true
  no_log: true

- name: Download and extract Hack font
  when: hack_exists is failed
  ansible.builtin.unarchive:
    src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/Hack.zip
    dest: /usr/local/share/fonts
    remote_src: true

# tmux

- name: Ensure tmux config directory exists
  ansible.builtin.file:
    path: /home/{{ user }}/{{ item }}
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "755"
  loop:
    - .config/tmux
    - .tmux/plugins/tpm

- name: Copy tmux configuration
  ansible.builtin.copy:
    src: ./config/tmux/tmux.conf
    dest: /home/{{ user }}/.config/tmux/tmux.conf
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "644"

- name: Clone and install tpm
  ansible.builtin.git:
    repo: https://github.com/tmux-plugins/tpm.git
    dest: /home/{{ user }}/.tmux/plugins/tpm
    version: 99469c4

# Zsh

- name: Clone and install oh-my-zsh
  ansible.builtin.git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    dest: /home/{{ user }}/.oh-my-zsh
    version: f97e871

- name: Copy zsh configuration
  ansible.builtin.blockinfile:
    path: /home/{{ user }}/.zshrc
    marker: "# ZSH CONFIG {mark}"
    block: |
      export ZSH="$HOME/.oh-my-zsh"
      ZSH_THEME=""
      plugins=(
        git
        ng
        nvm
        npm
        tmux
      )
      source $ZSH/oh-my-zsh.sh
    create: true
# Aliases

- name: Set aliases
  ansible.builtin.blockinfile:
    path: /home/{{ user }}/{{ item }}
    marker: "# ALIASES {mark}"
    block: |
      alias h="history"
      alias c="clear"
      alias e="exit"
      alias v="nvim"
      alias s="source ~/.zshrc"
      alias p="cd ~/projects"
      alias f="find . -name"
      alias l="ls -l"
      alias ll="ls -la"
      alias up="cd .."
      alias lg="lazygit"
      alias ld="lazydocker"
    create: true
  loop:
    - .zshrc
    - .bashrc

- name: Other shell config
  ansible.builtin.blockinfile:
    path: /home/{{ user }}/{{ item }}
    marker: "# ENV VARS {mark}"
    block: |
      export EDITOR="nvim"
      export MANPAGER="nvim +Man!"
      export CHROME_EXECUTABLE="chromium"
      # vi mode
      set -o vi
    create: true
  loop:
    - .zshrc
    - .bashrc

# w3m
- name: Ensure w3m config directory exists
  ansible.builtin.file:
    path: /home/{{ user }}/.w3m
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "755"

- name: Copy w3m configuration
  ansible.builtin.copy:
    src: ./config/w3m/keymap.w3m
    dest: /home/{{ user }}/.w3m/keymap.w3m
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "644"

